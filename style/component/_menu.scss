// Copyright 2016 Palantir Technologies, Inc. All rights reserved.
// Licensed under the terms of the LICENSE file distributed with this project.

$half-grid-size: $pt-grid-size / 2 !default;

$menu-item-border-radius: $pt-border-radius - 1 !default;

// Set line-height of menu items to be a multiple of the font size. This is
// needed because if the line-height does not extend far enough past the font's
// baseline, clipping will occur when the .text-overflow-ellipsis class is
// applied to it (#2177). Also, line-height should be an even value, or content
// will be misaligned by one pixel (Chrome quirk).
$menu-item-line-height-factor: 1.4;
$menu-item-line-height: round($pt-font-size * $menu-item-line-height-factor);
$menu-item-line-height-large: round($pt-font-size-large * $menu-item-line-height-factor);

$menu-min-width: $pt-grid-size * 18 !default;
$menu-item-padding: ($pt-button-height - $pt-icon-size-standard) / 2 !default;
$menu-item-padding-large: ($pt-button-height-large - $pt-icon-size-large) / 2 !default;
$menu-item-padding-vertical: ($pt-button-height - $menu-item-line-height) / 2 !default;
$menu-item-padding-vertical-large: ($pt-button-height-large - $menu-item-line-height-large) / 2 !default;

$menu-background-color: $white !default;

$menu-item-color-hover: flexy-color() !default;
$menu-item-color-active: flexy-color() !default;

// customize modifier classes with params.
// setting modifier to "" will generally apply it as default styles due to & selectors
@mixin menu-item($disabled-selector: ".b-menu__item--disabled", $hover-selector: ":hover") {
  @include pt-flex-container(row, $menu-item-padding);
  align-items: flex-start;
  border-radius: $menu-item-border-radius;
  padding: $menu-item-padding-vertical $menu-item-padding;
  text-decoration: none;
  line-height: $menu-item-line-height;
  color: inherit;
  user-select: none;

  > .fill {
    word-break: break-word;
  }

  &#{$hover-selector} {
    background-color: $menu-item-color-hover;
    cursor: pointer;
    text-decoration: none;
  }

  &#{$disabled-selector} {
    background-color: inherit;
    cursor: not-allowed;
    color: $pt-text-color-disabled;
  }
}

@mixin menu-item-intent($text-colors: $pt-intent-text-colors) {
  @each $intent, $color in $text-colors {
    &.intent-#{$intent} {
      color: $color;

      .icon {
        color: inherit;
      }

      &::before,
      &::after,
      .menu-item-label {
        color: $color;
      }

      &:hover,
      &.active {
        background-color: flexy-color();
      }

      &:active {
        background-color: flexy-color();
      }

      &:hover,
      &:active,
      &.active {
        &,
        &::before,
        &::after,
        .menu-item-label {
          color: $white;
        }
      }
    }
  }
}

@mixin menu-item-large() {
  padding: $menu-item-padding-vertical-large $menu-item-padding;
  line-height: $menu-item-line-height-large;
  font-size: $pt-font-size-large;
}

@mixin menu-divider() {
  display: block;
  margin: $half-grid-size;
  border-top: 1px solid $pt-divider-black;
}

@mixin menu-header($heading-selector: null) {
  @include menu-divider();
  cursor: default;
  padding-left: $menu-item-padding - $half-grid-size;

  @if $heading-selector != null {
    &:first-of-type {
      border-top: none;
    }

    #{$heading-selector} {
      @include menu-heading();
    }

    &:first-of-type #{$heading-selector} {
      padding-top: 0;
    }
  }
}

@mixin menu-heading() {
  @include heading-typography();
  @include overflow-ellipsis();
  margin: 0;
  padding: $pt-grid-size $menu-item-padding 0 1px;
  // a little extra space to avoid clipping descenders (because overflow hidden)
  line-height: $pt-icon-size-standard + 1px;
}

@mixin menu-header-large($heading-selector) {
  #{$heading-selector} {
    padding-top: $pt-grid-size * 1.5;
    padding-bottom: $pt-grid-size / 2;
    font-size: $pt-grid-size * 1.8;
  }

  &:first-of-type #{$heading-selector} {
    padding-top: 0;
  }
}


/*
Menus

Markup:
<ul class="menu {{.modifier}} elevation-1">
  <li>
    <a class="menu-item icon-people" tabindex="0">Share...</a>
  </li>
  <li>
    <a class="menu-item icon-circle-arrow-right" tabindex="0">Move...</a>
  </li>
  <li>
    <a class="menu-item icon-edit" tabindex="0">Rename</a>
  </li>
  <li class="menu-divider"></li>
  <li>
    <a class="menu-item icon-trash intent-danger" tabindex="0">Delete</a>
  </li>
</ul>

.large - Large size (only supported on <code>.menu</code>)

Styleguide menu
*/

.b-menu {
  margin: 0;
  border-radius: $pt-border-radius;
  min-width: $menu-min-width;
  padding: $half-grid-size;
  list-style: none;
  text-align: left;
  color: $pt-text-color;

  &__divider {
    @include menu-divider();
  }

  &__item {
    @include menu-item();
    @include menu-item-intent();

    &::before {
      // support pt-icon-* classes directly on this element
      margin-right: $menu-item-padding;
    }

    &::before,
    > .icon {
      margin-top: ($menu-item-line-height - $pt-icon-size-standard) / 2;
      color: $pt-icon-color;
    }

    .b-menu-item-label {
      color: $pt-text-color-muted;
    }

    &:hover {
      color: #fff;
    }

    &.active,
    &:active {
      background-color: $menu-item-color-active;
      color: #fff;
    }

    // pt-disable always overrides over styles
    // stylelint-disable declaration-no-important
    &.disabled {
      // override global a:focus styles
      outline: none !important;
      background-color: inherit !important;
      cursor: not-allowed !important;
      color: $pt-text-color-disabled !important;

      &::before,
      > .icon,
      .menu-item-label {
        color: $pt-icon-color-disabled !important;
      }
    }
    // stylelint-enable declaration-no-important

    .large & {
      @include menu-item-large();

      .icon {
        // SVG icons remain standard size when menu is large
        margin-top: ($menu-item-line-height-large - $pt-icon-size-standard) / 2;
      }

      &::before {
        //@include pt-icon($pt-icon-size-large);
        margin-top: ($menu-item-line-height-large - $pt-icon-size-large) / 2;
        margin-right: $menu-item-padding-large;
      }
    }
  }

  &__header {
    @include menu-header($heading-selector: "> h6");

    .large & {
      @include menu-header-large($heading-selector: "> h6");
    }
  }
}

button.b-menu__item {
  border: none;
  background: none;
  width: 100%;
  text-align: left;
}

/*
Menu headers

Markup:
<ul class="menu elevation-1">
  <li class="menu-header"><h6 class="heading">Layouts</h6></li>
  <li><button type="button" class="menu-item icon-layout-auto">Auto</button></li>
  <li><button type="button" class="menu-item icon-layout-circle">Circle</button></li>
  <li><button type="button" class="menu-item icon-layout-grid">Grid</button></li>
  <li class="menu-header"><h6 class="heading">Views</h6></li>
  <li><button type="button" class="menu-item icon-history">History</button></li>
  <li><button type="button" class="menu-item icon-star">Favorites</button></li>
  <li><button type="button" class="menu-item icon-envelope">Messages</button></li>
</ul>

Styleguide menu-header
*/

// #402 support menu inside label
.label .menu {
  margin-top: $pt-grid-size / 2;
}

.b-submenu {
  > .popover-wrapper {
    display: block;
  }

  .popover-target {
    display: block;

    &.popover-open > .b-menu__item {
      // keep a trail of hovered items as submenus are opened
      // stylelint-disable-next-line scss/at-extend-no-missing-placeholder
      @extend .b-menu__item:hover;
    }
  }

  &.popover {
    box-shadow: none;
    // horizontal padding leaves some space from parent menu item, and extends mouse zone
    padding: 0 $half-grid-size;

    > .popover-content {
      box-shadow: $pt-popover-box-shadow;
    }
  }
}
